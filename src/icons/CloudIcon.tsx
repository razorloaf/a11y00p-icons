import * as React from "react";
import { forwardRef } from "react";
import { IconProps } from "../types";
import { useIconFamily } from "../IconFamilyContext";
import { useOSAccessibility } from "../AccessibilityUtils";

const CloudIcon = forwardRef<SVGSVGElement, IconProps>(
  (props, ref) => {
    const {
      color = 'currentColor',
      size = 24,
      title,
      decorative = false,
      disableOSAdaptation = false,
      highContrastStrokeWidth,
      ...restProps
    } = useIconFamily(props);

    const { prefersHighContrast, forcedColors } = useOSAccessibility();
    const titleId = React.useId();
    const accessibleTitle = title === undefined ? "Cloud" : title;
    const isDecorativeOnly = decorative || accessibleTitle === '';

    const [isInsideButton, setIsInsideButton] = React.useState(false);

    React.useEffect(() => {
      if (ref && 'current' in ref && ref.current) {
        let parent = ref.current.parentElement;
        while (parent) {
          if (
            parent.tagName === 'BUTTON' ||
            parent.tagName === 'A' ||
            parent.getAttribute('role') === 'button'
          ) {
            setIsInsideButton(true);
            break;
          }
          parent = parent.parentElement;
        }
      }
    }, [ref]);

    const isHighContrast = !disableOSAdaptation && (prefersHighContrast || forcedColors);
    const strokeWidth = isHighContrast && highContrastStrokeWidth !== undefined
      ? highContrastStrokeWidth
      : restProps.strokeWidth;

    return isDecorativeOnly || isInsideButton ? (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        aria-hidden="true"
        {...restProps}
      >
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.51824 9.31132C9.05288 9.95488 8.89823 10.6682 8.86014 10.8923C8.80314 11.2276 8.52059 11.4854 8.17251 11.502C7.94551 11.5128 7.2696 11.5753 6.67021 11.8932C6.11102 12.1899 5.625 12.6957 5.625 13.6875C5.625 14.2867 5.76694 14.6943 5.94753 14.9772C6.12978 15.2628 6.37516 15.4585 6.63551 15.5945C6.89886 15.732 7.1693 15.8038 7.37884 15.8403C7.48219 15.8583 7.56686 15.867 7.62313 15.8712C7.65115 15.8733 7.6718 15.8743 7.68382 15.8747L7.69501 15.875H16.305L16.3162 15.8747C16.3282 15.8743 16.3488 15.8733 16.3769 15.8712C16.4331 15.867 16.5178 15.8583 16.6212 15.8403C16.8307 15.8038 17.1011 15.732 17.3645 15.5945C17.6248 15.4585 17.8702 15.2628 18.0525 14.9772C18.2331 14.6943 18.375 14.2867 18.375 13.6875C18.375 12.6957 17.889 12.1899 17.3298 11.8932C16.7304 11.5753 16.0545 11.5128 15.8275 11.502C15.4794 11.4854 15.1969 11.2276 15.1399 10.8923C15.1018 10.6682 14.9471 9.95488 14.4818 9.31132C14.0372 8.69645 13.2994 8.125 12 8.125C10.7006 8.125 9.96285 8.69645 9.51824 9.31132ZM8.50531 8.57887C9.15353 7.68242 10.2487 6.875 12 6.875C13.7513 6.875 14.8465 7.68242 15.4947 8.57887C15.945 9.20155 16.1741 9.85651 16.2868 10.2898C16.7029 10.3441 17.3223 10.4743 17.9155 10.789C18.7984 11.2573 19.625 12.1441 19.625 13.6875C19.625 14.4945 19.4304 15.1417 19.1062 15.6497C18.7836 16.1551 18.3559 16.4868 17.9432 16.7024C17.5335 16.9164 17.1308 17.0204 16.8356 17.0718C16.6865 17.0977 16.5609 17.111 16.4699 17.1178C16.4243 17.1212 16.3871 17.123 16.3597 17.1239C16.3529 17.1242 16.3468 17.1244 16.3412 17.1245C16.3355 17.1246 16.3304 17.1248 16.3259 17.1248L16.3148 17.125L16.3108 17.125L16.3091 17.125L16.3084 17.125C16.308 17.125 16.3077 17.125 16.3077 16.5V17.125H7.69231V16.5C7.69231 17.125 7.69198 17.125 7.69164 17.125L7.6909 17.125L7.68925 17.125L7.68517 17.125L7.67406 17.1248C7.66534 17.1247 7.65404 17.1244 7.64032 17.1239C7.6129 17.123 7.57571 17.1212 7.53012 17.1178C7.43915 17.111 7.31348 17.0977 7.16443 17.0718C6.86916 17.0204 6.46653 16.9164 6.0568 16.7024C5.64407 16.4868 5.21637 16.1551 4.89382 15.6497C4.5696 15.1417 4.375 14.4945 4.375 13.6875C4.375 12.1441 5.20162 11.2573 6.08445 10.789C6.67768 10.4743 7.29711 10.3441 7.71319 10.2898C7.82591 9.85651 8.05505 9.20155 8.50531 8.57887Z" fill="#262525"/>
      </svg>
    ) : (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        role="img"
        aria-labelledby={accessibleTitle ? titleId : undefined}
        {...restProps}
      >
        {accessibleTitle && <title id={titleId}>{accessibleTitle}</title>}
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.51824 9.31132C9.05288 9.95488 8.89823 10.6682 8.86014 10.8923C8.80314 11.2276 8.52059 11.4854 8.17251 11.502C7.94551 11.5128 7.2696 11.5753 6.67021 11.8932C6.11102 12.1899 5.625 12.6957 5.625 13.6875C5.625 14.2867 5.76694 14.6943 5.94753 14.9772C6.12978 15.2628 6.37516 15.4585 6.63551 15.5945C6.89886 15.732 7.1693 15.8038 7.37884 15.8403C7.48219 15.8583 7.56686 15.867 7.62313 15.8712C7.65115 15.8733 7.6718 15.8743 7.68382 15.8747L7.69501 15.875H16.305L16.3162 15.8747C16.3282 15.8743 16.3488 15.8733 16.3769 15.8712C16.4331 15.867 16.5178 15.8583 16.6212 15.8403C16.8307 15.8038 17.1011 15.732 17.3645 15.5945C17.6248 15.4585 17.8702 15.2628 18.0525 14.9772C18.2331 14.6943 18.375 14.2867 18.375 13.6875C18.375 12.6957 17.889 12.1899 17.3298 11.8932C16.7304 11.5753 16.0545 11.5128 15.8275 11.502C15.4794 11.4854 15.1969 11.2276 15.1399 10.8923C15.1018 10.6682 14.9471 9.95488 14.4818 9.31132C14.0372 8.69645 13.2994 8.125 12 8.125C10.7006 8.125 9.96285 8.69645 9.51824 9.31132ZM8.50531 8.57887C9.15353 7.68242 10.2487 6.875 12 6.875C13.7513 6.875 14.8465 7.68242 15.4947 8.57887C15.945 9.20155 16.1741 9.85651 16.2868 10.2898C16.7029 10.3441 17.3223 10.4743 17.9155 10.789C18.7984 11.2573 19.625 12.1441 19.625 13.6875C19.625 14.4945 19.4304 15.1417 19.1062 15.6497C18.7836 16.1551 18.3559 16.4868 17.9432 16.7024C17.5335 16.9164 17.1308 17.0204 16.8356 17.0718C16.6865 17.0977 16.5609 17.111 16.4699 17.1178C16.4243 17.1212 16.3871 17.123 16.3597 17.1239C16.3529 17.1242 16.3468 17.1244 16.3412 17.1245C16.3355 17.1246 16.3304 17.1248 16.3259 17.1248L16.3148 17.125L16.3108 17.125L16.3091 17.125L16.3084 17.125C16.308 17.125 16.3077 17.125 16.3077 16.5V17.125H7.69231V16.5C7.69231 17.125 7.69198 17.125 7.69164 17.125L7.6909 17.125L7.68925 17.125L7.68517 17.125L7.67406 17.1248C7.66534 17.1247 7.65404 17.1244 7.64032 17.1239C7.6129 17.123 7.57571 17.1212 7.53012 17.1178C7.43915 17.111 7.31348 17.0977 7.16443 17.0718C6.86916 17.0204 6.46653 16.9164 6.0568 16.7024C5.64407 16.4868 5.21637 16.1551 4.89382 15.6497C4.5696 15.1417 4.375 14.4945 4.375 13.6875C4.375 12.1441 5.20162 11.2573 6.08445 10.789C6.67768 10.4743 7.29711 10.3441 7.71319 10.2898C7.82591 9.85651 8.05505 9.20155 8.50531 8.57887Z" fill="#262525"/>
      </svg>
    );
  }
);

CloudIcon.displayName = "CloudIcon";

export default CloudIcon;
