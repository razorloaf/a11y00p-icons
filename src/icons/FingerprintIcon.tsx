import * as React from "react";
import { forwardRef } from "react";
import { IconProps } from "../types";
import { useIconFamily } from "../IconFamilyContext";
import { useOSAccessibility } from "../AccessibilityUtils";

const FingerprintIcon = forwardRef<SVGSVGElement, IconProps>(
  (props, ref) => {
    const {
      color = 'currentColor',
      size = 24,
      title,
      decorative = false,
      disableOSAdaptation = false,
      highContrastStrokeWidth,
      ...restProps
    } = useIconFamily(props);

    const { prefersHighContrast, forcedColors } = useOSAccessibility();
    const titleId = React.useId();
    const accessibleTitle = title === undefined ? "Fingerprint" : title;
    const isDecorativeOnly = decorative || accessibleTitle === '';

    const [isInsideButton, setIsInsideButton] = React.useState(false);

    React.useEffect(() => {
      if (ref && 'current' in ref && ref.current) {
        let parent = ref.current.parentElement;
        while (parent) {
          if (
            parent.tagName === 'BUTTON' ||
            parent.tagName === 'A' ||
            parent.getAttribute('role') === 'button'
          ) {
            setIsInsideButton(true);
            break;
          }
          parent = parent.parentElement;
        }
      }
    }, [ref]);

    const isHighContrast = !disableOSAdaptation && (prefersHighContrast || forcedColors);
    const strokeWidth = isHighContrast && highContrastStrokeWidth !== undefined
      ? highContrastStrokeWidth
      : restProps.strokeWidth;

    return isDecorativeOnly || isInsideButton ? (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        aria-hidden="true"
        {...restProps}
      >
        <path fill-rule="evenodd" clip-rule="evenodd" d="M7.58378 7.11399C5.66769 8.87982 4.68285 12.1579 6.87015 16.2438L5.76812 16.8338C3.34422 12.3058 4.35326 8.39131 6.73667 6.1948C9.08055 4.03473 12.7567 3.58659 15.3447 6.00388L14.4915 6.91739C12.4684 5.02775 9.53939 5.31174 7.58378 7.11399ZM10.8338 8.53376C9.68283 8.7916 8.54559 10.0075 8.54559 11.8346H7.29559C7.29559 9.48203 8.78243 7.71233 10.5606 7.31399C11.458 7.11294 12.4158 7.2697 13.2343 7.87317C14.0469 8.47225 14.6675 9.46953 14.9969 10.8569C15.1537 11.5169 15.271 12.1221 15.377 12.6693C15.398 12.7774 15.4185 12.8832 15.4388 12.9867C15.5633 13.622 15.6787 14.167 15.837 14.6667C16.143 15.6321 16.6125 16.4417 17.6615 17.2815L16.8802 18.2573C15.6236 17.2512 15.0201 16.2265 14.6454 15.0443C14.4635 14.4702 14.3367 13.8629 14.2121 13.2271C14.191 13.1194 14.1699 13.0108 14.1487 12.901C14.0426 12.3543 13.9309 11.7781 13.7807 11.1457C13.5002 9.96417 13.0072 9.2587 12.4925 8.87927C11.9839 8.50423 11.4009 8.40673 10.8338 8.53376ZM16.636 11.9477C16.4291 10.8226 16.0779 9.66302 15.5228 8.52621L16.646 7.97774C17.2572 9.22936 17.6406 10.4995 17.8653 11.7216C18.0698 12.8332 18.4274 13.5719 18.74 14.0464C18.9892 14.4248 19.1989 14.6283 19.3467 14.7717C19.3882 14.812 19.4249 14.8476 19.4562 14.8809L18.5439 15.7355L18.544 15.7356C18.544 15.7356 18.5422 15.7337 18.5377 15.7292L18.5183 15.7101L18.4891 15.682L18.4524 15.6465C18.3986 15.5943 18.3294 15.5259 18.2504 15.4412C18.0918 15.2712 17.8975 15.0399 17.696 14.734C17.2917 14.12 16.8708 13.2245 16.636 11.9477ZM11.0701 14.8742C10.7216 13.3578 10.6926 11.9564 10.7999 11.1546L12.0388 11.3204C11.954 11.9543 11.9687 13.2036 12.2883 14.5942C12.6073 15.9817 13.2158 17.4489 14.2685 18.5726L13.3563 19.4272C12.1034 18.0898 11.4193 16.3937 11.0701 14.8742ZM9.89786 19.4272C8.37256 17.799 7.99977 15.6153 7.99977 14.693H9.24977C9.24977 15.4114 9.56866 17.2475 10.8101 18.5726L9.89786 19.4272Z" fill="#262525"/>
      </svg>
    ) : (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        role="img"
        aria-labelledby={accessibleTitle ? titleId : undefined}
        {...restProps}
      >
        {accessibleTitle && <title id={titleId}>{accessibleTitle}</title>}
        <path fill-rule="evenodd" clip-rule="evenodd" d="M7.58378 7.11399C5.66769 8.87982 4.68285 12.1579 6.87015 16.2438L5.76812 16.8338C3.34422 12.3058 4.35326 8.39131 6.73667 6.1948C9.08055 4.03473 12.7567 3.58659 15.3447 6.00388L14.4915 6.91739C12.4684 5.02775 9.53939 5.31174 7.58378 7.11399ZM10.8338 8.53376C9.68283 8.7916 8.54559 10.0075 8.54559 11.8346H7.29559C7.29559 9.48203 8.78243 7.71233 10.5606 7.31399C11.458 7.11294 12.4158 7.2697 13.2343 7.87317C14.0469 8.47225 14.6675 9.46953 14.9969 10.8569C15.1537 11.5169 15.271 12.1221 15.377 12.6693C15.398 12.7774 15.4185 12.8832 15.4388 12.9867C15.5633 13.622 15.6787 14.167 15.837 14.6667C16.143 15.6321 16.6125 16.4417 17.6615 17.2815L16.8802 18.2573C15.6236 17.2512 15.0201 16.2265 14.6454 15.0443C14.4635 14.4702 14.3367 13.8629 14.2121 13.2271C14.191 13.1194 14.1699 13.0108 14.1487 12.901C14.0426 12.3543 13.9309 11.7781 13.7807 11.1457C13.5002 9.96417 13.0072 9.2587 12.4925 8.87927C11.9839 8.50423 11.4009 8.40673 10.8338 8.53376ZM16.636 11.9477C16.4291 10.8226 16.0779 9.66302 15.5228 8.52621L16.646 7.97774C17.2572 9.22936 17.6406 10.4995 17.8653 11.7216C18.0698 12.8332 18.4274 13.5719 18.74 14.0464C18.9892 14.4248 19.1989 14.6283 19.3467 14.7717C19.3882 14.812 19.4249 14.8476 19.4562 14.8809L18.5439 15.7355L18.544 15.7356C18.544 15.7356 18.5422 15.7337 18.5377 15.7292L18.5183 15.7101L18.4891 15.682L18.4524 15.6465C18.3986 15.5943 18.3294 15.5259 18.2504 15.4412C18.0918 15.2712 17.8975 15.0399 17.696 14.734C17.2917 14.12 16.8708 13.2245 16.636 11.9477ZM11.0701 14.8742C10.7216 13.3578 10.6926 11.9564 10.7999 11.1546L12.0388 11.3204C11.954 11.9543 11.9687 13.2036 12.2883 14.5942C12.6073 15.9817 13.2158 17.4489 14.2685 18.5726L13.3563 19.4272C12.1034 18.0898 11.4193 16.3937 11.0701 14.8742ZM9.89786 19.4272C8.37256 17.799 7.99977 15.6153 7.99977 14.693H9.24977C9.24977 15.4114 9.56866 17.2475 10.8101 18.5726L9.89786 19.4272Z" fill="#262525"/>
      </svg>
    );
  }
);

FingerprintIcon.displayName = "FingerprintIcon";

export default FingerprintIcon;
