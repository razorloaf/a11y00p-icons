import * as React from "react";
import { forwardRef } from "react";
import { IconProps } from "../types";
import { useIconFamily } from "../IconFamilyContext";
import { useOSAccessibility } from "../AccessibilityUtils";

const BadgeIcon = forwardRef<SVGSVGElement, IconProps>(
  (props, ref) => {
    const {
      color = 'currentColor',
      size = 24,
      title,
      decorative = false,
      disableOSAdaptation = false,
      highContrastStrokeWidth,
      ...restProps
    } = useIconFamily(props);

    const { prefersHighContrast, forcedColors } = useOSAccessibility();
    const titleId = React.useId();
    const accessibleTitle = title === undefined ? "Badge" : title;
    const isDecorativeOnly = decorative || accessibleTitle === '';

    const [isInsideButton, setIsInsideButton] = React.useState(false);

    React.useEffect(() => {
      if (ref && 'current' in ref && ref.current) {
        let parent = ref.current.parentElement;
        while (parent) {
          if (
            parent.tagName === 'BUTTON' ||
            parent.tagName === 'A' ||
            parent.getAttribute('role') === 'button'
          ) {
            setIsInsideButton(true);
            break;
          }
          parent = parent.parentElement;
        }
      }
    }, [ref]);

    const isHighContrast = !disableOSAdaptation && (prefersHighContrast || forcedColors);
    const strokeWidth = isHighContrast && highContrastStrokeWidth !== undefined
      ? highContrastStrokeWidth
      : restProps.strokeWidth;

    return isDecorativeOnly || isInsideButton ? (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        aria-hidden="true"
        {...restProps}
      >
        <path fill-rule="evenodd" clip-rule="evenodd" d="M18.3402 15.1324C18.3402 14.9784 18.3293 14.8266 18.3081 14.6779C19.1766 14.1043 19.7501 13.12 19.7501 11.9998C19.7501 10.8797 19.1766 9.89531 18.3081 9.32174C18.3293 9.17302 18.3402 9.02125 18.3402 8.86726C18.3402 7.09561 16.904 5.65941 15.1324 5.65941C14.9783 5.65941 14.8264 5.67035 14.6776 5.69155C14.104 4.82332 13.1198 4.25 11.9998 4.25C10.8799 4.25 9.89562 4.82332 9.32201 5.69155C9.17321 5.67035 9.02135 5.65941 8.86726 5.65941C7.09561 5.65941 5.65941 7.09561 5.65941 8.86726C5.65941 9.02135 5.67036 9.1732 5.69155 9.32201C4.82332 9.89562 4.25 10.8799 4.25 11.9998C4.25 13.1198 4.82332 14.104 5.69155 14.6776C5.67035 14.8264 5.65941 14.9783 5.65941 15.1324C5.65941 16.904 7.09561 18.3403 8.86726 18.3403C9.02128 18.3403 9.17306 18.3293 9.3218 18.3081C9.89538 19.1765 10.8797 19.75 11.9998 19.75C13.1199 19.75 14.1043 19.1765 14.6778 18.3081C14.8266 18.3293 14.9784 18.3403 15.1324 18.3403C16.904 18.3403 18.3402 16.904 18.3402 15.1324ZM18.5001 11.9998C18.5001 12.9037 17.8876 13.6646 17.0549 13.8899C16.9022 13.9312 16.8166 14.1211 16.887 14.2628C17.0171 14.5248 17.0902 14.82 17.0902 15.1324C17.0902 16.2137 16.2137 17.0903 15.1324 17.0903C14.82 17.0903 14.5248 17.0171 14.2628 16.887C14.1211 16.8166 13.9312 16.9022 13.8898 17.0549C13.6645 17.8875 12.9037 18.5 11.9998 18.5C11.096 18.5 10.3351 17.8875 10.1098 17.0549C10.0685 16.9022 9.8786 16.8166 9.73689 16.887C9.4749 17.0171 9.17962 17.0903 8.86726 17.0903C7.78597 17.0903 6.90941 16.2137 6.90941 15.1324C6.90941 14.82 6.98257 14.5247 7.1127 14.2627C7.18307 14.121 7.09755 13.9311 6.94484 13.8898C6.11238 13.6644 5.5 12.9036 5.5 11.9998C5.5 11.096 6.11238 10.3353 6.94484 10.1099C7.09754 10.0685 7.18307 9.87867 7.1127 9.73698C6.98257 9.47496 6.90941 9.17966 6.90941 8.86726C6.90941 7.78597 7.78597 6.90941 8.86726 6.90941C9.17965 6.90941 9.47496 6.98257 9.73698 7.1127C9.87867 7.18307 10.0685 7.09755 10.1099 6.94484C10.3353 6.11238 11.096 5.5 11.9998 5.5C12.9036 5.5 13.6644 6.11238 13.8898 6.94484C13.9311 7.09755 14.121 7.18307 14.2627 7.1127C14.5247 6.98257 14.82 6.90941 15.1324 6.90941C16.2137 6.90941 17.0902 7.78597 17.0902 8.86726C17.0902 9.17961 17.0171 9.47488 16.887 9.73686C16.8166 9.87858 16.9022 10.0685 17.0549 10.1098C17.8876 10.3351 18.5001 11.0959 18.5001 11.9998ZM11.442 14.4419L15.442 10.4419L14.5582 9.55806L11.0001 13.1161L9.44205 11.5581L8.55816 12.4419L10.5582 14.4419H11.442Z" fill="#262525"/>
      </svg>
    ) : (
      <svg
        width={size}
        height={size}
        viewBox="0 0 24 24"
        fill="none"
        stroke={color}
        strokeWidth={strokeWidth}
        ref={ref}
        role="img"
        aria-labelledby={accessibleTitle ? titleId : undefined}
        {...restProps}
      >
        {accessibleTitle && <title id={titleId}>{accessibleTitle}</title>}
        <path fill-rule="evenodd" clip-rule="evenodd" d="M18.3402 15.1324C18.3402 14.9784 18.3293 14.8266 18.3081 14.6779C19.1766 14.1043 19.7501 13.12 19.7501 11.9998C19.7501 10.8797 19.1766 9.89531 18.3081 9.32174C18.3293 9.17302 18.3402 9.02125 18.3402 8.86726C18.3402 7.09561 16.904 5.65941 15.1324 5.65941C14.9783 5.65941 14.8264 5.67035 14.6776 5.69155C14.104 4.82332 13.1198 4.25 11.9998 4.25C10.8799 4.25 9.89562 4.82332 9.32201 5.69155C9.17321 5.67035 9.02135 5.65941 8.86726 5.65941C7.09561 5.65941 5.65941 7.09561 5.65941 8.86726C5.65941 9.02135 5.67036 9.1732 5.69155 9.32201C4.82332 9.89562 4.25 10.8799 4.25 11.9998C4.25 13.1198 4.82332 14.104 5.69155 14.6776C5.67035 14.8264 5.65941 14.9783 5.65941 15.1324C5.65941 16.904 7.09561 18.3403 8.86726 18.3403C9.02128 18.3403 9.17306 18.3293 9.3218 18.3081C9.89538 19.1765 10.8797 19.75 11.9998 19.75C13.1199 19.75 14.1043 19.1765 14.6778 18.3081C14.8266 18.3293 14.9784 18.3403 15.1324 18.3403C16.904 18.3403 18.3402 16.904 18.3402 15.1324ZM18.5001 11.9998C18.5001 12.9037 17.8876 13.6646 17.0549 13.8899C16.9022 13.9312 16.8166 14.1211 16.887 14.2628C17.0171 14.5248 17.0902 14.82 17.0902 15.1324C17.0902 16.2137 16.2137 17.0903 15.1324 17.0903C14.82 17.0903 14.5248 17.0171 14.2628 16.887C14.1211 16.8166 13.9312 16.9022 13.8898 17.0549C13.6645 17.8875 12.9037 18.5 11.9998 18.5C11.096 18.5 10.3351 17.8875 10.1098 17.0549C10.0685 16.9022 9.8786 16.8166 9.73689 16.887C9.4749 17.0171 9.17962 17.0903 8.86726 17.0903C7.78597 17.0903 6.90941 16.2137 6.90941 15.1324C6.90941 14.82 6.98257 14.5247 7.1127 14.2627C7.18307 14.121 7.09755 13.9311 6.94484 13.8898C6.11238 13.6644 5.5 12.9036 5.5 11.9998C5.5 11.096 6.11238 10.3353 6.94484 10.1099C7.09754 10.0685 7.18307 9.87867 7.1127 9.73698C6.98257 9.47496 6.90941 9.17966 6.90941 8.86726C6.90941 7.78597 7.78597 6.90941 8.86726 6.90941C9.17965 6.90941 9.47496 6.98257 9.73698 7.1127C9.87867 7.18307 10.0685 7.09755 10.1099 6.94484C10.3353 6.11238 11.096 5.5 11.9998 5.5C12.9036 5.5 13.6644 6.11238 13.8898 6.94484C13.9311 7.09755 14.121 7.18307 14.2627 7.1127C14.5247 6.98257 14.82 6.90941 15.1324 6.90941C16.2137 6.90941 17.0902 7.78597 17.0902 8.86726C17.0902 9.17961 17.0171 9.47488 16.887 9.73686C16.8166 9.87858 16.9022 10.0685 17.0549 10.1098C17.8876 10.3351 18.5001 11.0959 18.5001 11.9998ZM11.442 14.4419L15.442 10.4419L14.5582 9.55806L11.0001 13.1161L9.44205 11.5581L8.55816 12.4419L10.5582 14.4419H11.442Z" fill="#262525"/>
      </svg>
    );
  }
);

BadgeIcon.displayName = "BadgeIcon";

export default BadgeIcon;
